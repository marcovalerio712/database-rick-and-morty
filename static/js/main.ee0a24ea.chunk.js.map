{"version":3,"sources":["Components/Header/logo.png","Components/Header/Header.js","Components/Card/Card.js","Components/Grid/Grid.js","Components/Paginator/Paginator.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Header","className","src","Logo","alt","Card","character","isSelected","charToFavorite","selectedClass","image","name","species","location","onClick","id","Grid","addToFavorite","characterID","nextFavorites","state","favorites","filter","selectedID","push","setState","this","props","characters","isLoading","map","includes","React","Component","Paginator","currentPage","onChange","totalPages","nextStage","SearchBox","onInputChange","e","searchParam","target","value","onClickSubmit","updateFetch","type","placeholder","App","onSubmitSearch","searchKey","console","log","fetchCharacters","a","url","URL","params","page","Object","keys","forEach","key","searchParams","append","fetch","response","json","results","info","pages","onPaginatorChange","nextPage","componentDidMount","componentDidUpdate","prevProps","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee0a24ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b62096f7.png\";","import React from 'react';\r\nimport \"./Header.css\";\r\nimport Logo from './logo.png';\r\n\r\n\r\nfunction Header (){\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <img src={Logo} alt=\"logo\"/>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Card({ character, isSelected, charToFavorite }) {\r\n\r\n    const onClickButton = () => {\r\n        charToFavorite(character.id, isSelected);\r\n    }\r\n\r\n\r\n    const selectedClass = (isSelected ? \"selected\" : \"\");\r\n    return (\r\n        \r\n        <div className={'card ' + selectedClass}>\r\n            <img src={character.image} alt={character.name} />\r\n            <div className=\"card-info\">\r\n                <p className=\"card-info__name\">\r\n                    <span>Name:</span>\r\n                    {character.name}\r\n                </p>\r\n                <p className=\"card-info__generics\">\r\n                    {character.species} <span> from </span> {character.location.name}\r\n                </p>\r\n            </div>\r\n            <button className=\"favorite\" onClick = {onClickButton}>\r\n                {isSelected ? \"Remove\" : \"Add\"}        \r\n            </button>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nCard.propTypes = {\r\n\r\n    character: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    charToFavorite: PropTypes.func.isRequired\r\n\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Grid.css\";\r\nimport Card from \"../Card/Card\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Grid extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            favorites: [],\r\n        }\r\n    }\r\n\r\n    addToFavorite = (characterID, isSelected) => {\r\n\r\n        let nextFavorites = [...this.state.favorites];\r\n\r\n        if (!isSelected) {\r\n            nextFavorites.push(characterID);\r\n        }\r\n        else {\r\n            nextFavorites = nextFavorites.filter((selectedID) => selectedID !== characterID);\r\n        }\r\n\r\n        this.setState({favorites: nextFavorites});\r\n    }\r\n\r\n    render() {\r\n        const { characters, isLoading } = this.props;\r\n        const { favorites } = this.state;\r\n\r\n        return (\r\n\r\n            <div className=\"grid container\">\r\n\r\n                {characters.map((character) =>\r\n                (<Card\r\n                    key={character.id}\r\n                    character={character}\r\n                    isSelected={favorites.includes(character.id)}\r\n                    charToFavorite = {this.addToFavorite}\r\n                    \r\n                />))}\r\n                {\r\n                    isLoading && (\r\n                        <div className=\"loading\">\r\n                            <p>Loading...</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nGrid.propTypes = {\r\n\r\n    characters: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({currentPage, onChange, totalPages}) => {\r\n\r\n    const onClickPrev = () => {\r\n        const nextStage = currentPage - 1;\r\n\r\n        if(nextStage > 0)\r\n            onChange(nextStage);\r\n    };\r\n\r\n    const onClickNext = () => {\r\n        const nextStage = currentPage + 1;\r\n\r\n        if(nextStage <= totalPages)\r\n            onChange(nextStage);\r\n    };\r\n\r\n    return(\r\n    <div className=\"container paginator\">\r\n        <button onClick={onClickPrev}>Prev</button>\r\n\r\n        <p>\r\n            Page <span>{currentPage}</span> of {totalPages}\r\n        </p>\r\n\r\n        <button onClick={onClickNext}>Next</button>\r\n    </div>\r\n    );\r\n};\r\n\r\nPaginator.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    totalPages: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport \"./SearchBox.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchBox extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            searchParam: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            searchParam: e.target.value\r\n        })\r\n    };\r\n\r\n    onClickSubmit = () => {\r\n        this.props.updateFetch(this.state.searchParam);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div className=\"container searchBox\">\r\n                <input type=\"text\" placeholder=\"Search\" onChange={this.onInputChange}/>\r\n                <button onClick={this.onClickSubmit}>\r\n                    {'>'}\r\n                </button>\r\n    \r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nSearchBox.propTypes = {\r\n\r\n    updateFetch: PropTypes.func.isRequired\r\n\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport Grid from './Components/Grid/Grid';\r\nimport Paginator from './Components/Paginator/Paginator';\r\nimport SearchBox from './Components/SearchBox/SearchBox';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      totalPages: 1,\r\n      currentPage: 1,\r\n      isLoading: false,\r\n      searchParam: \"\",\r\n      characters: []\r\n    }\r\n  }\r\n\r\n  onSubmitSearch = (searchKey) => {\r\n    console.log(searchKey);\r\n    this.setState({\r\n      searchParam: searchKey\r\n    });\r\n  }\r\n\r\n  fetchCharacters = async () => {\r\n\r\n    try {\r\n      this.setState({ isLoading: true })\r\n\r\n      const url = new URL(\"https://rickandmortyapi.com/api/character/\");\r\n      \r\n      const params = {\r\n        page: this.state.currentPage,\r\n        name: this.state.searchParam\r\n      }\r\n\r\n      Object.keys(params).forEach((key) => {\r\n        url.searchParams.append(key, params[key]);\r\n      });\r\n\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      this.setState({ \r\n        characters: json.results,\r\n        totalPages: json.info.pages\r\n      })\r\n    } catch (e) { }\r\n    finally {\r\n      this.setState({ isLoading: false })\r\n    }\r\n  }\r\n\r\n  onPaginatorChange = (nextPage) => {\r\n    this.setState({currentPage: nextPage});\r\n  } \r\n\r\n  componentDidMount = () => {\r\n    this.fetchCharacters();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if(prevState.currentPage !== this.state.currentPage || prevState.searchParam !== this.state.searchParam){\r\n      this.fetchCharacters();\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const { characters, isLoading, currentPage, totalPages } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <SearchBox updateFetch={this.onSubmitSearch}/>\r\n        <Grid characters={characters} isLoading={isLoading} />\r\n        <Paginator\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onChange={this.onPaginatorChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}